// Generated by CoffeeScript 1.8.0
var FilesController, SlidesController, async, fs, orm, path, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

orm = require('node-orm');

async = require('async');

_ = require('underscore');

path = require('path');

fs = require('fs');

FilesController = require('./files');

module.exports = SlidesController = (function(_super) {
  var Files;

  __extends(SlidesController, _super);

  function SlidesController() {
    return SlidesController.__super__.constructor.apply(this, arguments);
  }

  Files = orm.models.file;

  SlidesController.prototype.index = function(req, res) {
    return Files.find({}).where("girl_id IS NULL").all(function(err, slides) {
      if (err) {
        return res.status(500).send(err.message || err);
      } else {
        return res.send(slides);
      }
    });
  };

  SlidesController.prototype.create = function(req, res) {
    var file, _ref, _ref1;
    file = (_ref = req.files) != null ? _ref.file : void 0;
    if (!(file != null ? (_ref1 = file.type) != null ? typeof _ref1.match === "function" ? _ref1.match(/^image/) : void 0 : void 0 : void 0)) {
      res.status(400).send("Wrong file");
      fs.unlink(file.path, function(err) {
        if (err) {
          return logger.warn("Error happened while tried to delete file", file);
        }
      });
      return;
    }
    file.path = file.path.replace(path.resolve('public'), '/static');
    file.type = 'photo';
    return Files.create(file, function(err, _file) {
      if (err) {
        return res.status(500).send(err.message || err);
      } else {
        return res.send(_file);
      }
    });
  };

  return SlidesController;

})(FilesController);
